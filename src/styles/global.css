/* src/styles/global.css */

/* Import Google Fonts */
/* Add this at the top of your global.css */
@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:opsz,wght@6..12,400;6..12,500;6..12,600;6..12,700&family=Unbounded:wght@400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Add default font families in the base layer */
@layer base {
  html {
    font-family: 'Nunito Sans', sans-serif;
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: 'Unbounded', sans-serif;
  }
}

/* Custom animations */
@keyframes pulse-slow {
  0%, 100% { 
    opacity: 0.5; 
    transform: scale(1); 
  }
  50% { 
    opacity: 0.8; 
    transform: scale(1.05); 
  }
}

.animate-pulse-slow {
  animation: pulse-slow 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Subtle hover effects */
.hover-lift {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 20px -5px rgba(31, 27, 45, 0.08);
}

/* Enhanced glassmorphism */
.glass-effect {
  background: rgba(255, 255, 255, 0.7);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.glass-effect-dark {
  background: rgba(27, 10, 63, 0.7);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

@layer components {
  .tooltip {
    @apply invisible opacity-0 absolute left-full ml-2 px-2 py-1 bg-russian-violet text-white text-sm rounded-md whitespace-nowrap;
    transform: translateY(-50%);
    transition: all 0.2s ease;
  }

  .tooltip::before {
    content: '';
    @apply absolute top-1/2 -left-1 w-2 h-2 bg-russian-violet transform rotate-45 -translate-y-1/2;
  }

  .tooltip-container:hover .tooltip {
    @apply visible opacity-100;
  }
  
  /* Enhanced button styles */
  .btn-icon {
    @apply flex items-center justify-center rounded-lg transition-all duration-300;
  }
  
  .btn-icon-primary {
    @apply btn-icon bg-gray-50 text-gray-600 hover:bg-[#F6E6FF] hover:text-[#BF4BF6] hover:shadow-sm;
  }
  
  .btn-icon-danger {
    @apply btn-icon bg-gray-50 text-gray-600 hover:bg-red-50 hover:text-red-600;
  }
  
  /* Notification badge */
  .notification-badge {
    @apply absolute -top-1.5 -right-1.5 w-5 h-5 flex items-center justify-center;
  }
  
  .notification-badge-inner {
    @apply absolute w-full h-full rounded-full bg-[#BF4BF6] flex items-center justify-center;
  }
  
  .notification-badge-pulse {
    @apply absolute w-full h-full rounded-full bg-[#BF4BF6] animate-pulse-slow opacity-60;
  }
  
  .notification-badge-text {
    @apply text-[10px] font-semibold text-white leading-none;
  }
}

/* Custom scrollbar */
.custom-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: #BF4BF6 #F6E6FF;
}
.custom-scrollbar::-webkit-scrollbar {
  width: 8px;
}
.custom-scrollbar::-webkit-scrollbar-track {
  background: #F6E6FF;
  border-radius: 10px;
}
.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: #BF4BF6;
  border-radius: 10px;
}
.dark .custom-scrollbar::-webkit-scrollbar-track {
  background: #1B0A3F;
}
.dark .custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: #7A00B8;
}

/* Gradient highlights */
.gradient-border-top {
  position: relative;
}

.gradient-border-top::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(to right, #7A00B8, #BF4BF6);
}

/* Professional status indicators */
.status-dot {
  @apply absolute bottom-0 right-0 w-4 h-4 rounded-full border-2 border-white;
}

.status-online {
  @apply status-dot bg-emerald-500;
}

.status-away {
  @apply status-dot bg-amber-400;
}

.status-busy {
  @apply status-dot bg-red-500;
}

.status-offline {
  @apply status-dot bg-gray-400;
}


/* These are the scroll animation classes to add to global.css */

/* Scroll animation keyframes */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(40px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(-40px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes clipRevealDown {
  from {
    clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@keyframes clipRevealUp {
  from {
    clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0 100%);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

/* Animation utility classes */
.animate-hidden {
  opacity: 0;
  will-change: transform, opacity;
}

.animate-fade-up {
  animation: fadeInUp cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-fade-down {
  animation: fadeInDown cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-fade-left {
  animation: fadeInLeft cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-fade-right {
  animation: fadeInRight cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-scale {
  animation: scaleIn cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-clip-down {
  animation: clipRevealDown cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-clip-up {
  animation: clipRevealUp cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

/* Animation durations */
.duration-300 {
  animation-duration: 300ms;
}

.duration-500 {
  animation-duration: 500ms;
}

.duration-700 {
  animation-duration: 700ms;
}

.duration-1000 {
  animation-duration: 1000ms;
}

/* Animation delays */
.delay-0 {
  animation-delay: 0ms;
}

.delay-100 {
  animation-delay: 100ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}

.delay-400 {
  animation-delay: 400ms;
}

.delay-500 {
  animation-delay: 500ms;
}

/* Staggered animation for children */
.stagger-children > *:nth-child(1) { animation-delay: 100ms; }
.stagger-children > *:nth-child(2) { animation-delay: 200ms; }
.stagger-children > *:nth-child(3) { animation-delay: 300ms; }
.stagger-children > *:nth-child(4) { animation-delay: 400ms; }
.stagger-children > *:nth-child(5) { animation-delay: 500ms; }
.stagger-children > *:nth-child(6) { animation-delay: 600ms; }
.stagger-children > *:nth-child(7) { animation-delay: 700ms; }
.stagger-children > *:nth-child(8) { animation-delay: 800ms; }
.stagger-children > *:nth-child(9) { animation-delay: 900ms; }
.stagger-children > *:nth-child(10) { animation-delay: 1000ms; }


/* These are the scroll animation classes to add to global.css */

/* Scroll animation keyframes */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(40px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(-40px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes clipRevealDown {
  from {
    clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@keyframes clipRevealUp {
  from {
    clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0 100%);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

/* Hero section background animation */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.animate-gradient-shift {
  background-size: 200% 200%;
  animation: gradientShift 15s ease infinite;
}

/* Floating animation for decorative elements */
@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-float-delay {
  animation: float 5s ease-in-out 2s infinite;
}

/* Animation utility classes */
.animate-hidden {
  opacity: 0;
  will-change: transform, opacity;
}

.animate-fade-up {
  animation: fadeInUp cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-fade-down {
  animation: fadeInDown cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-fade-left {
  animation: fadeInLeft cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-fade-right {
  animation: fadeInRight cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-scale {
  animation: scaleIn cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-clip-down {
  animation: clipRevealDown cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.animate-clip-up {
  animation: clipRevealUp cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

/* Animation durations */
.duration-300 {
  animation-duration: 300ms;
}

.duration-500 {
  animation-duration: 500ms;
}

.duration-700 {
  animation-duration: 700ms;
}

.duration-1000 {
  animation-duration: 1000ms;
}

/* Animation delays */
.delay-0 {
  animation-delay: 0ms;
}

.delay-100 {
  animation-delay: 100ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}

.delay-400 {
  animation-delay: 400ms;
}

.delay-500 {
  animation-delay: 500ms;
}

/* Staggered animation for children */
.stagger-children > *:nth-child(1) { animation-delay: 100ms; }
.stagger-children > *:nth-child(2) { animation-delay: 200ms; }
.stagger-children > *:nth-child(3) { animation-delay: 300ms; }
.stagger-children > *:nth-child(4) { animation-delay: 400ms; }
.stagger-children > *:nth-child(5) { animation-delay: 500ms; }
.stagger-children > *:nth-child(6) { animation-delay: 600ms; }
.stagger-children > *:nth-child(7) { animation-delay: 700ms; }
.stagger-children > *:nth-child(8) { animation-delay: 800ms; }
.stagger-children > *:nth-child(9) { animation-delay: 900ms; }
.stagger-children > *:nth-child(10) { animation-delay: 1000ms; }


@keyframes progress {
  0% { width: 0%; }
  50% { width: 70%; }
  100% { width: 100%; }
}

.animate-progress {
  animation: progress 1.5s ease-in-out infinite;
}

/* ... all your existing css ... */

@keyframes liquid-fill {
  0%, 100% {
    /* The bar is 100% clipped from the top, so it is invisible */
    clip-path: inset(100% 0 0 0);
  }
  50% {
    /* The clip is removed, revealing the entire bar */
    clip-path: inset(0% 0 0 0);
  }
}

/* This class applies the animation with a slower duration */
.animate-liquid-fill {
  /* THIS IS THE ONLY LINE THAT HAS CHANGED */
  animation: liquid-fill 6s ease-in-out infinite; /* Slower 6-second duration */
}

/* Add this to your global CSS file or import it in ManageCourseCategory.tsx */
/* Enterprise Professional Animations */

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes pulse-soft {
  0%, 100% {
    opacity: 0.8;
  }
  50% {
    opacity: 1;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-2px);
  }
}

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 5px rgba(191, 75, 246, 0.3);
  }
  50% {
    box-shadow: 0 0 20px rgba(191, 75, 246, 0.6);
  }
}

/* Professional utility classes */
.animate-shimmer {
  animation: shimmer 2s infinite linear;
}

.animate-pulse-soft {
  animation: pulse-soft 2s infinite ease-in-out;
}

.animate-float {
  animation: float 3s infinite ease-in-out;
}

.animate-glow {
  animation: glow 2s infinite ease-in-out;
}

/* Professional loading spinner */
.spinner-professional {
  width: 20px;
  height: 20px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Professional gradient backgrounds */
.bg-professional-card {
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.bg-professional-deleted {
  background: linear-gradient(135deg, rgba(239, 68, 68, 0.1) 0%, rgba(239, 68, 68, 0.05) 100%);
  backdrop-filter: blur(10px);
  border: 2px dashed rgba(239, 68, 68, 0.4);
}

/* Professional hover effects */
.hover-lift {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-4px);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
}

/* Professional button styles */
.btn-professional {
  background: linear-gradient(135deg, #BF4BF6 0%, #D68BF9 100%);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 4px 15px rgba(191, 75, 246, 0.3);
}

.btn-professional:hover {
  background: linear-gradient(135deg, #A845E8 0%, #BF4BF6 100%);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(191, 75, 246, 0.4);
}

/* Glass morphism effect */
.glass-card {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

/* Professional text glow */
.text-glow {
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
}

/* Status indicator animations */
.status-active {
  background: linear-gradient(135deg, #10B981 0%, #34D399 100%);
  box-shadow: 0 0 15px rgba(16, 185, 129, 0.4);
}

.status-inactive {
  background: linear-gradient(135deg, #F59E0B 0%, #FBBF24 100%);
  box-shadow: 0 0 15px rgba(245, 158, 11, 0.4);
}